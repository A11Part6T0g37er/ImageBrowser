<Page x:Class="ImageBrowser.MainPage"
	  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:local="using:ImageBrowser"
	  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	  xmlns:converters="using:ImageBrowser.Common.Converters"
	  xmlns:helpers="using:ImageBrowser.Helpers"
	  mc:Ignorable="d"
	  xmlns:sys="using:System"
	  xmlns:viewModels="using:ImageBrowser.ViewModels"
	  xmlns:Models="using:ImageBrowser.Models"
	  xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
	  xmlns:Interactions="using:Microsoft.Xaml.Interactions.Core"
	  d:DataContext="{d:DesignInstance Type=viewModels:ImageFileInfoViewModel}"
	  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
	<!--d:DataContext="{d:DesignInstance Type=helpers:MSGraphQueriesHelper}"-->
	<Page.Resources>
		<converters:BooleanToVisibilityConverter x:Key="bool2Visibility" />
		<converters:BooleanToVisibilityConverter x:Key="bool2visInverse"
												 OnTrue="Collapsed"
												 OnFalse="Visible" />


		<viewModels:ImageFileInfoViewModel x:Key="ImageViewModel" />

		<Thickness x:Key="LargeItemMargin">8,0,0,0</Thickness>
		<Thickness x:Key="SmallItemMargin">0,0,0,0</Thickness>

		<ItemsPanelTemplate x:Key="ImageGridView_ItemsPanelTemplate">
			<ItemsWrapGrid Orientation="Horizontal"
						   ScrollViewer.VerticalScrollMode="Auto"
						   MaximumRowsOrColumns="5" />
		</ItemsPanelTemplate>

		<CollectionViewSource x:Name="ImagesCollection"
							  Source="{x:Bind imageFileInfoViewModel.GroupedImagesInfos}"
							  IsSourceGrouped="True" />
		<CollectionViewSource x:Name="PathCollections"
							  Source="{x:Bind imageFileInfoViewModel.foldersPath}"
							  IsSourceGrouped="False" />


		<CollectionViewSource x:Name="FoldersToView"
							  Source="{x:Bind FoldersToDisplay}"
							  IsSourceGrouped="False" />

		
		<Style x:Key="ImageGridView_DefaultItemContainerStyle"
			   TargetType="GridViewItem">
			<Setter Property="Background"
					Value="White" />
			<Setter Property="Margin"
					Value="{StaticResource LargeItemMargin}" />

		</Style>

		<Style x:Key="ImageGridView_SmallItemContainerStyle"
			   TargetType="GridViewItem">
			<Setter Property="Background"
					Value="Violet" />
			<Setter Property="Margin"
					Value="{StaticResource SmallItemMargin}" />
		</Style>


		<DataTemplate x:Key="ImagesGridCollection_Small"
					  x:DataType="local:ImageFileInfo">
			<Grid Margin="{StaticResource SmallItemMargin}"
				  Width="60"
				  Height="60">
				<Image x:Name="ItemImage"
					   Stretch="UniformToFill"
					   Source="{Binding ImageFile.Path, Mode=OneWay}"
					   HorizontalAlignment="Center" />
				<ToolTipService.ToolTip>
					<ToolTip x:Name="toolTipImage">
						<StackPanel Orientation="Vertical">
							<TextBlock Text="{Binding ImageTitle, Mode=OneWay}"
									   HorizontalAlignment="Center" />
							<StackPanel Orientation="Horizontal"
										HorizontalAlignment="Left">
								<TextBlock Text="{Binding ImageFileType, Mode=OneWay}" />
								<TextBlock Text="{Binding ImageName, Mode=OneWay}"
										   HorizontalAlignment="Right"
										   Margin="10,0,0,8" />
							</StackPanel>
						</StackPanel>
					</ToolTip>
				</ToolTipService.ToolTip>

			</Grid>
		</DataTemplate>



		<DataTemplate x:Key="ImagesGridCollection_Default"
					  x:DataType="local:ImageFileInfo">
			<Grid Margin="{StaticResource LargeItemMargin}"
				  Height="{Binding ItemSize, ElementName=page}">
				<Grid.RowDefinitions>
					<RowDefinition />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<Image x:Name="ItemImage"
					   Stretch="UniformToFill"
					   Source="{x:Bind ImageSource, Mode=OneWay}"
					   Width="{Binding ItemSize,ElementName=app}"
					   HorizontalAlignment="Center"
					   Grid.Row="0"
					   Margin="0,0,0,0" />
				<StackPanel Orientation="Vertical"
							Grid.Row="1"
							Width="200">
					<TextBlock Text="{x:Bind ImagePath, Mode=OneWay}"
							   Style="{StaticResource SubtitleTextBlockStyle}" />

					<StackPanel Orientation="Horizontal"
								VerticalAlignment="Center"
								Height="50">


						<ListView ItemsSource="{x:Bind ImageProperties.Keywords}"
								  SelectionMode="Single"
								  VerticalAlignment="Center"
								  Margin="0,0,50,0">

							<ListView.ItemTemplate>

								<DataTemplate x:Name="KeyWordds"
											  x:DataType="local:ImageFileInfo">
									<ListViewItem>

										<TextBlock  Text="{Binding}"
													FontSize="12" />
									</ListViewItem>

								</DataTemplate>

							</ListView.ItemTemplate>
						</ListView>
						<ListView>
							<TextBlock Text="{x:Bind ImageFile.Path}" />
							<TextBlock TextWrapping="WrapWholeWords"
									   Text="{x:Bind ImageProperties.Height}" />
						</ListView>
					</StackPanel>

				</StackPanel>
				<ToolTipService.ToolTip>
					<ToolTip x:Name="toolTipImage">
						<StackPanel Orientation="Vertical">
							<TextBlock Text="{Binding ImageTitle, Mode=OneWay}"
									   HorizontalAlignment="Center" />
							<StackPanel Orientation="Horizontal"
										HorizontalAlignment="Left">
								<TextBlock Text="{Binding ImageFileType, Mode=OneWay}" />
								<TextBlock Text="{Binding ImageName, Mode=OneWay}"
										   HorizontalAlignment="Right"
										   Margin="10,0,0,8" />

							</StackPanel>
						</StackPanel>
					</ToolTip>
				</ToolTipService.ToolTip>

			</Grid>
		</DataTemplate>



	</Page.Resources>
	
	<Page.DataContext>
		<viewModels:ImageFileInfoViewModel />
	</Page.DataContext>
	
	<VisualStateManager.VisualStateGroups>
		<VisualStateGroup>
			<VisualState x:Name="LargeWindowBreakpoint">
				<VisualState.StateTriggers>
					<AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowBreakpoint}" />
				</VisualState.StateTriggers>
			</VisualState>
			<VisualState x:Name="MediumWindowBreakpoint">
				<VisualState.StateTriggers>
					<AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowBreakpoint}" />
				</VisualState.StateTriggers>
				<VisualState.Setters>
					<Setter Target="PicturesInGrid.ItemPanel"
							Value="{StaticResource ImagesGridCollection_Default}" />
					<Setter Target="ImageGridView.ItemContainerStyle"
							Value="{StaticResource ImageGridView_DefaultItemContainerStyle}" />


				</VisualState.Setters>
			</VisualState>
			<VisualState x:Name="MinWindowBreakpoint">
				<VisualState.StateTriggers>
					<AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowBreakpoint}" />
				</VisualState.StateTriggers>
				<VisualState.Setters>
					<Setter Target="PicturesInGrid.ItemPanel"
							Value="{StaticResource ImagesGridCollection_Small}" />
					<Setter Target="GroupedGrid.ItemPanel"
							Value="{StaticResource ImagesGridCollection_Small}" />
					<Setter Target="ImageGridView.ItemContainerStyle"
							Value="{StaticResource ImageGridView_SmallItemContainerStyle}" />
					<Setter Target="GroupedGrid.ItemContainerStyle"
							Value="{StaticResource ImageGridView_SmallItemContainerStyle}" />

				</VisualState.Setters>
			</VisualState>
		</VisualStateGroup>
	</VisualStateManager.VisualStateGroups>





	<RelativePanel>
		
		<Pivot x:Name="leftControlPanel"
			   Title="Image Browser"
			   Margin="25,0,0,15"
			   RelativePanel.Below="TopButtons">
			<PivotItem Name="All"
					   x:Uid="all"
					   Header="">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition MinHeight="5"
									   Height="*" />

					</Grid.RowDefinitions>
					<StackPanel Grid.Row="0">
						<TextBlock x:Uid="allPictures"
								   Text="" />
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="{x:Bind imageFileInfoViewModel.GroupedImagesInfos.Count, Mode=OneWay}" />
							<TextBlock x:Uid="groupedListDefinition"
									   Text="" />
						</StackPanel>
						<TextBlock x:Name="OneDriveInfo"
								   DataContext="{x:Bind imageFileInfoViewModel}"
								   Text="{Binding OneDriveInfoText, Mode=TwoWay}"
								   Visibility="Visible" />
					</StackPanel>
					<RefreshContainer Name="RefreshArea"
									  Grid.Row="1"
									  DataContext="{x:Bind imageFileInfoViewModel}"
									  Visibility="{Binding IsAnyObservableItem,Converter={StaticResource bool2Visibility},Mode=TwoWay}"
									  >
						<!--RefreshRequested="{Binding RefreshArea_RefreshRequested}"-->
						
						<Interactivity:Interaction.Behaviors>
						<Interactions:EventTriggerBehavior EventName="RefreshRequested"
														   SourceObject="{Binding ElementName=Refresh}">
							
							<Interactions:InvokeCommandAction Command="{Binding RefreshCommand, Mode=TwoWay}"
															  CommandParameter="{Binding ElementName=RefreshArea, Mode=TwoWay}" />
							
						</Interactions:EventTriggerBehavior>
						</Interactivity:Interaction.Behaviors>
									  
						<!--RefreshRequested="RefreshArea_RefreshRequested"-->
						<!--RefreshRequested="{Binding RefreshArea_RefreshRequested}"-->


						<GridView ItemsSource="{Binding Source={StaticResource ImagesCollection}}"
								  SelectionMode="None"
								  Name="GroupedGrid"
								  ItemsPanel="{StaticResource ImageGridView_ItemsPanelTemplate}"
								  SizeChanged="GroupedGrid_SizeChanged"
								  IsItemClickEnabled="True"
								  ItemClick="GroupedGrid_ItemClick"
								  RelativePanel.Below="leftControlPanel"
								  RelativePanel.AlignLeftWithPanel="True"
								  RelativePanel.AlignRightWithPanel="True"
								  MinWidth="180"
								  MinHeight="5"
								  Margin="15">
							<GridView.GroupStyle>
								<GroupStyle>
									<GroupStyle.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Key}"
													   Style="{StaticResource SubtitleTextBlockStyle}" />
										</DataTemplate>


									</GroupStyle.HeaderTemplate>
								</GroupStyle>
							</GridView.GroupStyle>
							<GridView.ItemTemplate>
								<DataTemplate x:DataType="local:ImageFileInfo">
									<Grid Margin="{StaticResource LargeItemMargin}"
										  Height="{Binding ItemSize, ElementName=page}">
										<Grid.RowDefinitions>
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />

										</Grid.RowDefinitions>
										<Image x:Name="ItemImage"
											   Stretch="Uniform"
											   Source="{x:Bind ImageSource, Mode=OneWay}"
											   Width="{Binding ItemSize,ElementName=app}"
											   VerticalAlignment="Top"
											   HorizontalAlignment="Center"
											   Grid.Row="0"
											   Margin="0,0,0,0" />

										<StackPanel Orientation="Vertical"
													Grid.Row="1"
													Margin="0,0,0,15">
											<TextBlock Text="{x:Bind ImageName, Mode=OneWay}"
													   MaxWidth="500"
													   TextWrapping="Wrap"
													   Style="{StaticResource SubtitleTextBlockStyle}"
													   HorizontalAlignment="Left"
													   VerticalAlignment="Top" />

										</StackPanel>

										<StackPanel Orientation="Horizontal"
													Grid.Row="2">
											<TextBlock TextWrapping="Wrap"
													   Text="{x:Bind ImageDimensions, Mode=OneWay}"
													   Margin="0,3,10,0" />

											<ItemsControl ItemsSource="{x:Bind ImageProperties.Keywords, Mode=OneWay}">
												<ItemsControl.ItemsPanel>
													<ItemsPanelTemplate>
														<WrapGrid Orientation="Horizontal"
																  MaximumRowsOrColumns="2"
																  ItemWidth="40" />
													</ItemsPanelTemplate>
												</ItemsControl.ItemsPanel>
												<ItemsControl.ItemTemplate>
													<DataTemplate x:DataType="x:String">

														<TextBlock   Text="{Binding}"
																	 FontSize="12"
																	 TextWrapping="WrapWholeWords" />

													</DataTemplate>
												</ItemsControl.ItemTemplate>


											</ItemsControl>

										</StackPanel>

									</Grid>
								</DataTemplate>
							</GridView.ItemTemplate>
						</GridView>

					</RefreshContainer>

				</Grid>


			</PivotItem>

			<PivotItem x:Name="GroupedList"
					   x:Uid="groupedList"
					   Header="">
				<Grid  Margin="0,0,100,0">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<StackPanel Orientation="Horizontal"
								Grid.Row="0">
						<TextBlock Text="{x:Bind imageFileInfoViewModel.GroupedImagesInfos.Count, Mode=OneWay}" />
						<TextBlock x:Uid="groupedListDefinition"
								   Text="" />
						
					</StackPanel>
					


						<ListView ItemsSource="{Binding Source={StaticResource ImagesCollection} }"
								  RelativePanel.Below="button"
								  ScrollViewer.HorizontalScrollBarVisibility="Auto"
								  Grid.Row="1">

							<ListView.ItemContainerStyle>
								<Style TargetType="ListViewItem"
									   BasedOn="{StaticResource ListViewItemExpanded}">
									<Setter Property="HorizontalAlignment"
											Value="Left" />
									<Setter Property="HorizontalContentAlignment"
											Value="Left" />
								</Style>
							</ListView.ItemContainerStyle>
							<ListView.ItemTemplate>
								<DataTemplate x:DataType="local:ImageFileInfo">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition />
											<RowDefinition />
											<RowDefinition />
										</Grid.RowDefinitions>
										<TextBlock Text="{x:Bind ImageName, Mode=OneWay}"
												   Style="{StaticResource BaseTextBlockStyle}"
												   Grid.Row="0"
												   HorizontalAlignment="Center" />
										<TextBlock Text="{x:Bind ImageDimensions, Mode=OneWay}"
												   Grid.Row="1" />
										<Image Source="{x:Bind ImageSource,Mode=OneWay}"
											   Stretch="UniformToFill"
											   Height="{Binding ItemSize,ElementName=page}"
											   Grid.Row="2"
											   Margin="0,5,0,10" />

									</Grid>
								</DataTemplate>
							</ListView.ItemTemplate>
							<ListView.GroupStyle>
								<GroupStyle>
									<GroupStyle.HeaderTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Key}"
													   Style="{StaticResource TitleTextBlockStyle}"
													   FontWeight="Bold"
													   FontSize="14"
													   Margin="15,0" />
										</DataTemplate>
									</GroupStyle.HeaderTemplate>
								</GroupStyle>
							</ListView.GroupStyle>
						</ListView>
					
				</Grid>
			</PivotItem>
			<PivotItem Header="Folders">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<TextBlock Text="Folders opened"
							   Margin="20"
							   Grid.Row="0" />
					<Button x:Name="openFolders"
							Grid.Row="1"
							HorizontalAlignment="Left"
							Height="120"
							Width="270"
							Background="#00adef"
							Style="{StaticResource FolderAddButton}"
							DataContext="{x:Bind imageFileInfoViewModel}"
							Command="{Binding OpenFoldersCommand}">
						<Grid >
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							
							<StackPanel Orientation="Vertical"
									Margin="0,0,30,0" Grid.Row="1">
							<TextBlock Text="Add a folder"
									    />
							<TextBlock Text="Include more in your collection"
									   FontSize="12"
									   HorizontalAlignment="Stretch" />
						</StackPanel>
						<Viewbox MaxHeight="35"
								 MaxWidth="35" Grid.Column="1" Grid.Row="1">
							<SymbolIcon Symbol="NewFolder" />
						</Viewbox>
					</Grid>
					</Button>
					<!--Content="Open folder"-->


					





					<StackPanel Margin="20,30,0,0"
								Grid.Row="2">
						<TextBlock Text="Null error occurs" />
					</StackPanel>
					<GridView Name="FoldersToShow"
							  Grid.Row="3"
							  SelectionMode="None"
							  ItemsSource="{Binding Source={StaticResource PathCollections}}"
							  MinWidth="180"
							  MinHeight="5"
							  Margin="15">
						<GridView.ItemTemplate>
							<DataTemplate>

								<StackPanel Orientation="Vertical">
									<Rectangle Fill="DarkKhaki"
											   Opacity="0.3"
											   RadiusX="10"
											   RadiusY="10"
											   Width="200"
											   HorizontalAlignment="Left" />
									<TextBlock Text="{Binding FolderDisplayName}"
											   VerticalAlignment="Bottom"
											   HorizontalAlignment="Left"
											   Margin="25" />
								</StackPanel>

							</DataTemplate>
						</GridView.ItemTemplate>


					</GridView>




				</Grid>
			</PivotItem>
		</Pivot>


		<CommandBar x:Name="TopButtons"
					DefaultLabelPosition="Right"
					IsOpen="True">
			<AppBarButton Icon="Refresh"
						  x:Name="Refresh"
						  Label=""
						  x:Uid="refresh"
						  ToolTipService.ToolTip="">
				<!--Click="{x:Bind RefreshArea.RequestRefresh}"
						  >-->

				
				<Interactivity:Interaction.Behaviors>
					<Interactions:EventTriggerBehavior EventName="Click">
						
						<Interactions:InvokeCommandAction Command="{Binding RefreshCommand}" />
					</Interactions:EventTriggerBehavior>
				</Interactivity:Interaction.Behaviors>
			</AppBarButton>
			

			<AppBarButton Icon="OpenFile"
						  Label=""
						  x:Uid="open"
						  DataContext="{x:Bind imageFileInfoViewModel}"
						  Command="{Binding OpenCLickCommand, Mode=TwoWay}" />

		</CommandBar>

		<Grid x:Name="startingGreetingScreen"
			  RelativePanel.AlignVerticalCenterWithPanel="True"
			  RelativePanel.AlignHorizontalCenterWithPanel="True"
			  HorizontalAlignment="Center"
			  RelativePanel.Below="leftControlPanel"
			  DataContext="{x:Bind imageFileInfoViewModel}"
			  Visibility="{Binding IsAnyObservableItem,Converter={StaticResource bool2visInverse},Mode=TwoWay}"
			  Margin="20,0,0,0">

			<TextBlock TextWrapping="Wrap"
					   Text="Nothig here" />
			<Image Source="/Assets/Square150x150Logo.scale-200.png"
				   Margin="0,25,0,0"
				   HorizontalAlignment="Right" />

		</Grid>

		<StackPanel x:Name="OneDrivePanel"
					Orientation="Horizontal"
					RelativePanel.RightOf="TopButtons"
					RelativePanel.AlignTopWith="TopButtons"
					HorizontalAlignment="Center"
					RelativePanel.AlignRightWithPanel="True"
					Margin="40,0,0,0">

			<CommandBar DefaultLabelPosition="Right"
						IsOpen="True">
				<AppBarButton Icon="Download"
							  x:Name="signingOneDrive"
							  Label=""
							  x:Uid="signIn"
							  DataContext="{x:Bind imageFileInfoViewModel}"
							  Visibility="{Binding IsUserSignedOut, Converter={StaticResource bool2visInverse},Mode=TwoWay}"
							  Command="{Binding SignInCommand}"
							  ToolTipService.ToolTip="OneDrive" />

				<AppBarButton Icon="Account"
							  x:Name="SignOutButton"
							  Label=""
							  x:Uid="signOut"
							  DataContext="{x:Bind imageFileInfoViewModel}"
							  Command="{Binding SignOutCommand}"
							  Visibility="{Binding  IsUserSignedOut,  Converter={StaticResource bool2Visibility},Mode=TwoWay}"
							  FontFamily="Segoe Ui" />




				<AppBarButton x:Name="OpenOneDrive"
							  Content=""
							  x:Uid="oneDriveOpen"
							  DataContext="{x:Bind imageFileInfoViewModel}"
							  Command="{Binding OneDriveOpenCommand}"
							  Visibility="{Binding IsUserSignedOut, Converter={StaticResource bool2Visibility}, Mode=TwoWay}" />


				<CommandBar.Content>
					<StackPanel>

						<TextBlock x:Name="ResultText"
								   DataContext="{x:Bind imageFileInfoViewModel}"
								   Text="{Binding ResultText,Mode=TwoWay}" />
					</StackPanel>
				</CommandBar.Content>
				<CommandBar.SecondaryCommands>
					<AppBarButton Icon="Setting"
								  Label=""
								  x:Uid="settings" />
					<AppBarButton Tag="Dark"
								  x:Name="Dark"
								  Label=""
								  x:Uid="dark"
								  >
								  <!--Click="ThemeButton_Click"--> 
					<Interactivity:Interaction.Behaviors>
						<Interactions:EventTriggerBehavior EventName="Click"
														   SourceObject="{Binding ElementName=Dark}">

							<Interactions:InvokeCommandAction Command="{Binding ThemeChangeCommand, Mode=TwoWay}"
															  CommandParameter="{Binding ElementName=Dark, Mode=TwoWay}" />

						</Interactions:EventTriggerBehavior>
					</Interactivity:Interaction.Behaviors>
						</AppBarButton>
					<AppBarButton Tag="Light"
								  x:Name="Light"
								  Label=""
								  x:Uid="light">
						
						<Interactivity:Interaction.Behaviors>
							<Interactions:EventTriggerBehavior EventName="Click"
															   SourceObject="{Binding ElementName=Light}">

								<Interactions:InvokeCommandAction Command="{Binding ThemeChangeCommand, Mode=TwoWay}"
																  CommandParameter="{Binding ElementName=Light, Mode=TwoWay}" />

							</Interactions:EventTriggerBehavior>
						</Interactivity:Interaction.Behaviors>
					</AppBarButton>
					<AppBarButton Tag="Default"
								  x:Name="Default"
								  Label=""
								  x:Uid="default">
						
						<Interactivity:Interaction.Behaviors>
							<Interactions:EventTriggerBehavior EventName="Click"
															   SourceObject="{Binding ElementName=Default}">

								<Interactions:InvokeCommandAction Command="{Binding ThemeChangeCommand, Mode=TwoWay}"
																  CommandParameter="{Binding ElementName=Default, Mode=TwoWay}" />

							</Interactions:EventTriggerBehavior>
						</Interactivity:Interaction.Behaviors>
					</AppBarButton>
				</CommandBar.SecondaryCommands>
			</CommandBar>
		</StackPanel>

	</RelativePanel>
</Page>
